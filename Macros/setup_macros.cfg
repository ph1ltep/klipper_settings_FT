

[gcode_macro SETUP_BED]
gcode:
    {% set TOL_CORNERS = params.TOL_CORNERS|default(10)|float %}
    {% set my_tg = params.TOL_GANTRY|default(0.025)|float %}
    CG28
    QUAD_GANTRY_LEVEL
    PARK


[gcode_macro INTRO_LINE]
gcode:
        M117 Intro Line
        UPDATE_DELAYED_GCODE ID=clear_display DURATION=10
        G1 Y1 X0 F1000.0 ; go outside print area
        G1 Z0.2 ;drop to height
        G92 E0.0
        M82 ;Absolute
        G1 Y100.0 E15.0 F1000.0 ; intro line
        G1 Y200.0 E25 F1000.0 ; intro line
        G1 Z1 ;lift, NO RETRACT
        G92 E0.0


[gcode_macro START_PRINT_bak]
variable_version: 0.1
description: Does everything to go from a cold printer to a successful print except a purge line.
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set BED_TEMP = params.BED_TEMP|default(svv.setup_default_bed_temp)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(svv.setup_default_nozzle_temp)|float %}
    {% set CHAMBER_TEMP = params.CHAMBER_TEMP|default(15)|float %}
    {% set CLEAN = params.CLEAN_NOZZLE|default(0)|float %}
    SET_LED LED=toolhead INDEX=1 SYNC=0 RED=1.0 BLUE=0.0 GREEN=0.3 WHITE=0.0 SYNC=0
    CG28
    M117 Requested temps {BED_TEMP}, {EXTRUDER_TEMP}, {CHAMBER_TEMP}

    {% if svv.setup_version|float < version|float %}
        { action_raise_error("Setup data is older than macro version
        You should check the values in INIT_SETUP and run it to update
        ")}
    {% endif %}
    {% if svv.setup_use_bed_offset == 1  %}
        BED_DETAILS # tell us about the bed
    {else}

    {% endif %}

    G1 Z20 F3000                       ; move nozzle away from bed

    G92 E0 ; reset extruder
    G90 ; absolute
    M82 ; extruder absolute
    G92 E0 ; reset extruder
    

    M107 S0; turn off fan
    ATTACH_PROBE_LOCK # attach probe and lock it till end.
    M117 Heating Bed to {BED_TEMP}
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10
    #M104 S120 ; set extruder warmup temp
    M140 S{BED_TEMP} ; start heating
    SETUP_BED TOL_CORNERS=0 TOL_GANTRY=0 #params being ignored
    M190 S{BED_TEMP} ; wait for bed temp
    PARK
    M109 S{svv.setup_idle_temp}
    M117 Preheat Extruder
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10
    #SETUP_BED TOL_CORNERS=0.2 TOL_GANTRY=0.02
    LOAD_MESH_TEMP BED_TEMP={BED_TEMP}
    M104 S{EXTRUDER_TEMP}
    PARK
    #Set our baseline offset for nozzle height, this is based PROBE_CALIBRATE result
    SET_GCODE_OFFSET Z={svv.setup_nozzle_offset} ;+ve is UP
    #And apply changes for a different bed
    {% if svv.setup_use_bed_offset == 1  %}
        SET_GCODE_OFFSET Z_ADJUST={svv.bed_offset}
    {% endif %}
    M117 Heating Extruder to {EXTRUDER_TEMP}
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10
    M109 S{EXTRUDER_TEMP} ; wait for extruder temp
    M117 Starting Print
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10
    CALIBRATE_Z
    DOCK_PROBE_UNLOCK
    {% if CLEAN == 1  %}
        CLEAN_NOZZLE
    {% endif %}

    {% set SHUTDOWN_VALUE = printer["gcode_macro SHUTDOWN_AFTER_PRINT"].value %}
    {% if SHUTDOWN_VALUE %}
        # turn the logo neopixel to blue
        SET_LED LED=toolhead INDEX=1 SYNC=0 RED=0.3 BLUE=0.7 GREEN=0.0 WHITE=0.0 SYNC=0
    {% else %}
        # turn the logo neopixel to blue
        SET_LED LED=toolhead INDEX=1 SYNC=0 RED={svv.led_logo_r} BLUE={svv.led_logo_b} GREEN={svv.led_logo_g} WHITE={svv.led_logo_w} SYNC=0
    {% endif %}

    
    CG28 #Try homing at end to fix gcode
    


[gcode_macro END_PRINT_bak]
description: Clean up after a print, save mesh if SAVE_AT_END was used.
gcode:
    M140 S0 ; turn off heatbed
    M104 S0 ; turn off temperature
    M107 S0; turn off fan
    G91
    G1 X-2 Y-2 E-6 F300 ;big retract/wipe
    G90
    PRESENT
    M84 X Y E     ; disable motors
    #BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0
    SET_PRESSURE_ADVANCE ADVANCE=0
    M117 Print Done
    FORCE_MESH_LOAD
    SAVE_IF_SET
    CG28
    SET_LED LED=toolhead INDEX=1 SYNC=0 RED=0.0 BLUE=0.0 GREEN=1.0 WHITE=0.0 SYNC=0

    {% set SHUTDOWN_VALUE = printer["gcode_macro SHUTDOWN_AFTER_PRINT"].value %}
    {% if SHUTDOWN_VALUE == 1 %}
        POWER_OFF_PRINTER
    {% endif %}


#[gcode_macro CANCEL_PRINT]
#rename_existing: BASE_CANCEL_PRINT
#gcode:
#    TURN_OFF_HEATERS
#    CLEAR_PAUSE
#    SDCARD_RESET_FILE
#    M107 S0 ; turn off fans
#    PRESENT
#    BASE_CANCEL_PRINT

[gcode_macro CANCEL_PRINT_bak]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_execute: False
gcode:
  {% set user       = printer['gcode_macro _USER_VARIABLE'] %}
  {% set filter_off = user.peripheral.filter.run_after_print %}
  {% set vent_on    = user.peripheral.vent.on_val %}
  {% set vent_off   = user.peripheral.vent.run_after_print %}
  {% set retract    = user.filament.retract.end if not printer.pause_resume.is_paused 
                 else user.filament.retract.cancel %}
  SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=execute VALUE=True
  M117 Cancel
  CANCEL_PRINT_BASE
  {% if printer['gcode_macro PRINT_START'].state == 'Prepare' %}
    {% if not printer.extruder.can_extrude %}
      {action_respond_info("Extruder Temp to low heat to %3.1fC" % printer.configfile.settings.extruder.min_extrude_temp)}
      M109 S{printer.configfile.settings.extruder.min_extrude_temp}
    {% endif %}
    M83
    G1 E-{retract} F{user.speed.retract}
  {% endif %}
  TURN_OFF_HEATERS
  {% if params.PARK|default(0)|int == 1 or (not printer.pause_resume.is_paused and user.park.park_at_cancel) %}
    _TOOLHEAD_PARK P={params.PARK|default(0)} X={user.park.pause.x} Y={user.park.pause.y}
  {% endif %}
  M107                                                     ; turn off fan
  {% if user.hw.chamber.fan %} M141 S{vent_on} {% endif %} ; vent chamber (setting fan to below ambient)
  _ADD_PRINT_TIME
  {% if params.ERROR|default(0)|int == 1 %}
    {% if user.hw.display.ena %} _LCD_KNOB COLOR=RED BLINK=0.2 {% endif %}
    _SD_PRINT_STATS R='abort'
  {% else %}
   {% if user.hw.display.ena %} _LCD_KNOB COLOR=BLUE {% endif %}
    _SD_PRINT_STATS R='canceled'
  {% endif %}
  _SD_PRINTER_STATS
  {% if user.hw.caselight.ena %} _CASELIGHT_OFF {% endif %}
  {% if user.hw.chamber.fan %} UPDATE_DELAYED_GCODE ID=_DELAY_VENT_OFF DURATION={vent_off} {% endif %}
  {% if user.hw.filter.ena %} UPDATE_DELAYED_GCODE ID=_DELAY_FILTER_OFF DURATION={filter_off} {% endif %}
  {% if user.unload_sd %} UPDATE_DELAYED_GCODE ID=_DELAY_SDCARD_RESET_FILE DURATION=10 {% endif %}
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10


# use this to set an offset to the gcode that remains in place, usually represents a systematic error in PROBE_CALIBRATE
# this looks like the thickness of the shim i use, but I can't be certain it's just that. 
[gcode_macro SETUP_OFFSET_bak]
description: Set ZOFFSET parameter to the static adjustment you need for the printer, independent of bed offsets
gcode:
    {% if "ZOFFSET" in params %}
        { action_respond_info("Nozzle offset was " + printer.save_variables.variables.setup_nozzle_offset|string )}
        SAVE_VARIABLE VARIABLE=setup_nozzle_offset VALUE={params.ZOFFSET|default(0)|float}
        { action_respond_info("Nozzle offset set to " + params.ZOFFSET|default(0)|string )}
    {% else %}
         { action_respond_info("Nozzle offset is " + printer.save_variables.variables.setup_nozzle_offset|string )}
    {% endif %}



